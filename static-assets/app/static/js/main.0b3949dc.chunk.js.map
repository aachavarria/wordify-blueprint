{"version":3,"sources":["shared/contentTypeMap.js","shared/DynamicRoute.js","shared/queries.graphql.js","shared/Router.js","shared/AppIntl.js","shared/App.js","index.js","shared/utils.js","shared/context.js","shared/CircularProgressSpinner.js","relayEnvironment.js","shared/hooks.js"],"names":["lazy","DynamicRoute","props","match","location","useState","state","setState","url","useEffect","destroyed","page","parseInt","parse","search","pagination","limit","offset","reportNavigation","fetchQuery","text","includePosts","postsLimit","postsOffset","then","data","model","parseDescriptor","content","items","posts","meta","total","document","title","pageTitle_s","pageDescription_s","description","head","querySelector","setAttribute","window","scroll","CircularProgressSpinner","modelId","craftercms","id","isAuthoring","contentTypeMap","Router","path","component","Locales","en","es","useGlobalContext","locale","messages","App","jQuery","AppIntl","fallback","process","Cookies","get","set","ReactDOM","render","StrictMode","getElementById","attr","documentElement","getAttribute","createResource","factory","result","status","suspender","response","error","read","crafterConfig","baseUrl","site","crafterConf","configure","GlobalContext","createContext","context","useContext","Error","GlobalContextProvider","useSpreadState","pages","pagesLoading","theme","$","value","useMemo","Provider","message","screenHeight","className","cx","cy","r","fill","strokeWidth","strokeMiterlimit","operation","variables","fetch","method","headers","body","JSON","stringify","query","json","Environment","network","Network","create","store","Store","RecordSource","neverResource","Promise","reducer","nextState","initializerArg","initializer","useReducer","useNavigation","update","destroyedRef","useRef","current","useSearchQuery","useLocation","q","setQuery","onChange","useCallback","e","target","fields","contentTypes","useUrlSearchQueryFetchResource","resource","setResource","createQuery","map","pipe","hits","rest","counted","parsedHits","_source","preParseSearchResults","filter","toPromise"],"mappings":"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","file":"static/js/main.0b3949dc.chunk.js","sourcesContent":["/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { lazy } from 'react';\n\nexport default {\n  '/page/entry': lazy(() => import('../pages/Home')),\n  '/page/about': lazy(() => import('../pages/About')),\n  '/page/contact': lazy(() => import('../pages/Contact')),\n  '/page/category': lazy(() => import('../pages/Category')),\n  '/page/post': lazy(() => import('../pages/Post')),\n  '/page/search': lazy(() => import('../pages/Search')),\n  '/component/header': lazy(() => import('../components/Header')),\n  '/component/footer': lazy(() => import('../components/Footer')),\n  '/component/bio': lazy(() => import('../components/Bio')),\n  '/component/image': lazy(() => import('../components/Image')),\n  '/component/responsive_columns': lazy(() => import('../components/ResponsiveColumns')),\n  '/component/rich_text': lazy(() => import('../components/RichText')),\n  '/component/slider': lazy(() => import('../components/Slider'))\n};\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { useEffect, useState } from 'react';\n\nimport CircularProgressSpinner from './CircularProgressSpinner';\nimport { fetchQuery } from '../relayEnvironment';\nimport byUrlQuery from './queries.graphql';\nimport { parseDescriptor } from '@craftercms/content';\nimport { reportNavigation } from '@craftercms/ice';\nimport { parse } from 'query-string';\nimport { isAuthoring } from './utils';\nimport { Guest, ContentType } from '@craftercms/studio-guest';\nimport contentTypeMap from './contentTypeMap';\n\nconst limit = 3;\n\nexport default function DynamicRoute(props) {\n  const { match, location } = props;\n  const [state, setState] = useState(null);\n  const url = match.url;\n\n  useEffect(() => {\n    let destroyed = false;\n    let page = parseInt(parse(location.search).page ?? 1) - 1;\n    const pagination = { limit, offset: page ? (page * limit) : 0 };\n    reportNavigation(url);\n    fetchQuery(\n      { text: byUrlQuery },\n      {\n        url: `.*${url === '/' ? 'website/index' : url}.*`,\n        includePosts: true,\n        postsLimit: pagination.limit,\n        postsOffset: pagination.offset\n      }\n    ).then(({ data }) => {\n      if (!destroyed) {\n        const model = parseDescriptor(data.content.items?.[0]);\n        const posts = parseDescriptor(data.posts.items);\n        setState({\n          model,\n          posts,\n          meta: {\n            posts: {\n              total: data.posts.total,\n              ...pagination\n            }\n          }\n        });\n        if (model) {\n          document.title = model.pageTitle_s ?? 'Wordify Crafter CMS';\n          if (model.pageDescription_s) {\n            const description = document.head.querySelector('meta[name=\"description\"]');\n            description && description.setAttribute('content', model.pageDescription_s ?? '');\n          }\n        }\n      }\n    });\n    return () => {\n      destroyed = true;\n    };\n  }, [url, location.search]);\n\n  useEffect(() => {\n    window.scroll(0, 0);\n  }, [url]);\n\n  if (state === null) {\n    return <CircularProgressSpinner />;\n  } else {\n    return (\n      <Guest modelId={state.model?.craftercms.id} isAuthoring={isAuthoring()}>\n        <ContentType {...state} {...props} contentTypeMap={contentTypeMap} />\n      </Guest>\n    );\n  }\n\n}\n\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\n// language=GraphQL\nexport default `\n\n  fragment byUrlQueryHomepage on page_entry  {\n    pageTitle_s\n    pageDescription_s\n    bios_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n    slider_o {\n      item {\n        key\n        component {\n          ...byUrlQueryContentItemFields\n          ...on component_slider {\n            ...byUrlQuerySlider\n          }\n        }\n      }\n    }\n  }\n  \n  fragment byUrlQueryAboutPage on page_about {\n    pageTitle_s\n    pageDescription_s\n    headline_s\n    bios_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n    content_o {\n      item {\n        key\n        component {\n          ...on component_rich_text {\n            ...byUrlQueryRichText\n          }\n          ...on component_image {\n            ...byUrlQueryImage\n          }\n          ...on component_responsive_columns {\n            ...byUrlQueryResponsiveColumns\n          }\n        }\n      }\n    }\n  }\n\n  fragment byUrlQueryContactPage on page_contact {\n    pageTitle_s\n    pageDescription_s\n\n  }\n\n  fragment byUrlQueryCategoryPage on page_category {\n    pageTitle_s\n    pageDescription_s\n\n  }\n\n  fragment byUrlQueryPostPage on page_post {\n    ...byUrlQueryContentItemFields\n    slug: localId(transform: \"storeUrlToRenderUrl\")\n    pageTitle_s\n    pageDescription_s\n    blurb_t\n    headline_s\n    mainImage_s\n    content_o {\n      item {\n        key\n        component {\n          ...on component_rich_text {\n            ...byUrlQueryRichText\n          }\n          ...on component_image {\n            ...byUrlQueryImage\n          }\n          ...on component_responsive_columns {\n            ...byUrlQueryResponsiveColumns\n          }\n        }\n      }\n    }\n    authorBio_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n  }\n\n  fragment byUrlQueryPost on component_post {\n    ...byUrlQueryContentItemFields\n    slug: localId(transform: \"storeUrlToRenderUrl\")\n    pageTitle_s\n    pageDescription_s\n    blurb_t\n    headline_s\n    mainImage_s\n    content_o {\n      item {\n        key\n        component {\n          ...on component_rich_text {\n            ...byUrlQueryRichText\n          }\n          ...on component_image {\n            ...byUrlQueryImage\n          }\n          ...on component_responsive_columns {\n            ...byUrlQueryResponsiveColumns\n          }\n        }\n      }\n    }\n    authorBio_o {\n      item {\n        key\n        component {\n          ...byUrlQueryBioFragment\n        }\n      }\n    }\n  }\n\n  fragment byUrlQueryContentItemFields on ContentItem {\n    guid: objectId\n    path: localId\n    contentTypeId: content__type\n    dateCreated: createdDate_dt\n    dateModified: lastModifiedDate_dt\n    label: internal__name\n  }\n\n  fragment byUrlQueryBioFragment on component_bio {\n    guid: objectId\n    contentTypeId: content__type\n    label: internal__name\n    path: localId\n    bio_t\n    name_s\n    profilePic_s\n    linkButtonText_s\n    linkButtonUrl_s\n    showLinkButton_b\n    facebookLink_s\n    twitterLink_s\n    instagramLink_s\n    youTubeLink_s\n  }\n\n  fragment byUrlQueryRichText on component_rich_text {\n    ...byUrlQueryContentItemFields\n    content_html_raw\n  }\n\n  fragment byUrlQueryImage on component_image {\n    ...byUrlQueryContentItemFields\n    image_s\n    alternativeText_s\n  }\n\n  fragment byUrlQueryResponsiveColumns on component_responsive_columns {\n    ...byUrlQueryContentItemFields\n    columns_o {\n      item {\n        columnSize_s\n        content_o {\n          item {\n            key\n            component {\n              ...on component_rich_text {\n                ...byUrlQueryRichText\n              }\n              ...on component_image {\n                ...byUrlQueryImage\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  fragment byUrlQuerySlider on component_slider {\n    ...byUrlQueryContentItemFields\n    posts_o {\n      item {\n        key\n        component {\n          ...byUrlQueryContentItemFields\n          slug: localId(transform: \"storeUrlToRenderUrl\")\n          pageTitle_s\n          pageDescription_s\n          blurb_t\n          headline_s\n          mainImage_s\n          authorBio_o {\n            item {\n              key,\n              component {\n                ...byUrlQueryBioFragment\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  query byUrlQuery(\n    $url: String\n    $skipContentType: Boolean = true\n    $includePosts: Boolean = true\n    $postsLimit: Int = 8\n    $postsOffset: Int = 0\n  ) {\n    content: contentItems {\n      total\n      items {\n        ...byUrlQueryContentItemFields\n        url: localId(\n          transform: \"storeUrlToRenderUrl\",\n          filter:{ regex: $url }\n        )\n        content__type(\n          filter:{\n            regex: \".*(bio|post|entry|category|contact|about|search).*\"\n          }\n        ) @skip (if: $skipContentType)\n        ...on page_entry {\n          ...byUrlQueryHomepage\n        }\n        ...on page_about {\n          ...byUrlQueryAboutPage\n        }\n        ...on page_contact {\n          ...byUrlQueryContactPage\n        }\n        ...on page_category {\n          ...byUrlQueryCategoryPage\n        }\n        ...on page_post {\n          ...byUrlQueryPostPage\n        }\n        ...on component_post {\n          ...byUrlQueryPost\n        }\n      }\n    }\n    posts: component_post(limit: $postsLimit, offset: $postsOffset) @include(if: $includePosts) {\n      total\n      items {\n        ...byUrlQueryPost\n      }\n    }\n  }\n  \n`;\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\n\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport DynamicRoute from './DynamicRoute';\n\nexport default function Router() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/*\" component={DynamicRoute} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport { IntlProvider } from 'react-intl';\nimport { useGlobalContext } from './context';\nimport en from '../assets/locales/en';\nimport es from '../assets/locales/es';\n\nconst Locales = {\n  en,\n  es\n};\n\nexport default (props) => {\n  const [{ locale }] = useGlobalContext();\n  return <IntlProvider {...props} locale={locale} messages={Locales[locale]}/>;\n};\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { Suspense } from 'react';\nimport Router from './Router';\nimport CircularProgressSpinner from './CircularProgressSpinner';\nimport { GlobalContextProvider } from './context';\nimport AppIntl from './AppIntl';\n\nexport default function App(props) {\n  return (\n    <GlobalContextProvider jQuery={props.jQuery}>\n      <AppIntl>\n        <Suspense\n          fallback={\n            <CircularProgressSpinner />\n          }\n        >\n          <Router />\n        </Suspense>\n      </AppIntl>\n    </GlobalContextProvider>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './shared/App';\nimport Cookies from 'js-cookie';\n// import * as serviceWorker from './serviceWorker';\n\nif (\n  process.env.REACT_APP_CRAFTERCMS_SITE_ID &&\n  Cookies.get('crafterSite') !== process.env.REACT_APP_CRAFTERCMS_SITE_ID\n) {\n  Cookies.set('crafterSite', process.env.REACT_APP_CRAFTERCMS_SITE_ID)\n}\n\n// On occasions, Crafter's jQuery overrides the site's jQuery\n// briefly. This will get fixed on next releases of Crafter CMS,\n// but for now, adding jQuery to the global context to 'cache' it.\nReactDOM.render(\n  <React.StrictMode>\n    <App jQuery={window.jQuery} />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { crafterConf } from '@craftercms/classes';\nimport Cookies from 'js-cookie';\n\nexport function isAuthoring() {\n  const html = document.documentElement;\n  const attr = html.getAttribute('data-craftercms-preview');\n  return (\n    // eslint-disable-next-line no-template-curly-in-string\n    attr === '${modePreview?c}' || // Otherwise disable/enable if you want to see pencils in dev server.\n    attr === 'true'\n  );\n}\n\nexport function createResource(factory) {\n  let result;\n  let status = \"pending\";\n  let suspender = factory().then(\n    response => {\n      status = \"success\";\n      result = response;\n    },\n    error => {\n      status = \"error\";\n      result = error;\n    }\n  );\n  return {\n    read() {\n      if (status === \"pending\") {\n        throw suspender;\n      } else if (status === \"error\") {\n        throw result;\n      } else if (status === \"success\") {\n        return result;\n      }\n    }\n  };\n}\n\nexport const crafterConfig = {\n  baseUrl: process.env.REACT_APP_CRAFTERCMS_BASE_URL ?? '',\n  site: process.env.REACT_APP_CRAFTERCMS_SITE_ID ?? Cookies.get('crafterSite')\n};\n\ncrafterConf.configure(crafterConfig);\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React, { createContext, useContext, useMemo } from 'react';\nimport { isAuthoring } from './utils';\nimport { useSpreadState } from './hooks';\n\nexport const GlobalContext = createContext();\n\nfunction useGlobalContext() {\n  const context = useContext(GlobalContext);\n  if (!context) {\n    throw new Error(`useGlobalContext must be used within a GlobalContextProvider`);\n  }\n  return context;\n}\n\nfunction GlobalContextProvider(props) {\n  const [state, setState] = useSpreadState({\n    isAuthoring: isAuthoring(),\n    locale: 'en',\n    pages: null,\n    pagesLoading: false,\n    theme: 'light',\n    $: props.jQuery\n  });\n  const value = useMemo(() => [state, setState], [state, setState]);\n  return <GlobalContext.Provider value={value} {...props} />;\n}\n\nexport { GlobalContextProvider, useGlobalContext };\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport React from 'react';\n\nexport default function CircularProgressSpinner(props) {\n  const { message, screenHeight = true } = props;\n  return (\n    <div className={`circular-progress-spinner ${screenHeight ? 'circular-progress-spinner__screen-height' : ''}`}>\n      <div className=\"circular-progress-spinner--graphic-container\">\n        <svg className=\"circular-progress-spinner--graphic\">\n          <circle className=\"circular-progress-spinner--path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" strokeWidth=\"2\" strokeMiterlimit=\"10\"/>\n        </svg>\n      </div>\n      {\n        message &&\n        <p className=\"circular-progress-spinner--message\">{message}</p>\n      }\n    </div>\n  );\n}\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport {\n  Environment,\n  Network,\n  RecordSource,\n  Store\n} from 'relay-runtime';\n\nexport function fetchQuery(\n  operation,\n  variables\n) {\n  return fetch(process.env.REACT_APP_GRAPHQL_SERVER, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      query: operation.text,\n      variables\n    })\n  }).then(response => response.json());\n}\n\nconst environment = new Environment({\n  network: Network.create(fetchQuery),\n  store: new Store(new RecordSource()),\n});\n\nexport default environment;\n","/*\n * Copyright (C) 2007-2020 Crafter Software Corporation. All Rights Reserved.\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU General Public License version 3 as published by\n * the Free Software Foundation.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program.  If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { useCallback, useEffect, useReducer, useRef, useState } from 'react';\nimport { fetchQuery } from '../relayEnvironment';\nimport { useGlobalContext } from './context';\nimport { parse } from 'query-string';\nimport { useLocation } from 'react-router-dom';\nimport { crafterConfig, createResource } from './utils';\nimport { map } from 'rxjs/operators';\nimport { createQuery, search } from '@craftercms/search';\nimport { parseDescriptor, preParseSearchResults } from '@craftercms/content';\n\nexport const neverResource = createResource(() => new Promise(() => void 0));\n\nconst reducer = (state, nextState) => {\n  return { ...state, ...nextState };\n}\n\nexport function useSpreadState(initializerArg, initializer) {\n  return useReducer(reducer, initializerArg, initializer);\n}\n\nexport function useNavigation() {\n  const [{ pages, pagesLoading }, update] = useGlobalContext();\n  const destroyedRef = useRef(false);\n  useEffect(() => {\n    return () => {\n      destroyedRef.current = true;\n    };\n  }, []);\n  useEffect(() => {\n    if (!pages && !pagesLoading) {\n      update({ pagesLoading: true });\n      fetchQuery({\n        text: `\n          query Nav {\n            pages {\n              total\n              items {\n                navLabel\n                contentTypeId: content__type\n                url: localId(transform: \"storeUrlToRenderUrl\")\n                placeInNav(filter: { equals: true }) @skip(if: true)\n                orderDefault_f\n              }\n            }\n          }\n        `\n      }).then(({ data }) => {\n        (!destroyedRef.current) && update({ pages: data.pages.items });\n      });\n    }\n  }, [update, pages, pagesLoading]);\n  return pages;\n}\n\nexport function useSearchQuery() {\n  const { search } = useLocation();\n  const [query, setQuery] = useState(() => parse(search).q ?? '');\n  const onChange = useCallback((e) => setQuery(e.target.value), []);\n  useEffect(() => {\n    setQuery(parse(search).q ?? '');\n  }, [search]);\n  return [query, onChange, setQuery];\n}\n\nconst fields = ['headline_s', 'blurb_t'];\nconst contentTypes = ['/page/post', '/component/post'];\nexport function useUrlSearchQueryFetchResource() {\n  const [query] = useSearchQuery();\n  const [resource, setResource] = useState(neverResource);\n  // https://github.com/facebook/react/issues/14413\n  useEffect(() => {\n    // FYI: A GraphQL query could also be used instead of a direct Elasticsearch\n    setResource(createResource(\n      () => search(\n        createQuery('elasticsearch', {\n          query: {\n            'bool': {\n              'filter': [\n                { 'bool': { 'should': contentTypes.map(id => ({ 'match': { 'content-type': id } })) } },\n                { 'multi_match': { 'query': query, 'fields': fields } }\n              ]\n            }\n          }\n        }),\n        crafterConfig\n      ).pipe(\n        map(({ hits, ...rest }) => {\n          const counted = {};\n          const parsedHits = hits.map(({ _source }) => parseDescriptor(\n            preParseSearchResults(_source)\n          )).filter((content) => {\n            // TODO: Search currently coming with duplicates. Should address at the elastic query level.\n            if (content.craftercms.id in counted) {\n              return false;\n            } else {\n              counted[content.craftercms.id] = true;\n              return true;\n            }\n          });\n          return { ...rest, hits: parsedHits };\n        })\n      ).toPromise()\n    ));\n  }, [query]);\n  return resource;\n}\n"],"sourceRoot":""}